from flask import Flask, request, jsonify, render_template
from flask_cors import CORS
import openai

app = Flask(__name__, template_folder="templates")
CORS(app)  # Enable CORS for frontend communication

# Replace with your OpenAI API Key
openai.api_key = "your-api-key"

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/generate", methods=["POST"])
def generate_marketing_copy():
    data = request.json
    user_input = data.get("input", "")

    if not user_input:
        return jsonify({"response": "Please enter a product or service."}), 400

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": "You are an AI marketing assistant."},
                      {"role": "user", "content": f"Generate a marketing copy for {user_input}."}]
        )
        ai_reply = response["choices"][0]["message"]["content"]
        return jsonify({"response": ai_reply})
    except Exception as e:
        return jsonify({"response": f"Error: {str(e)}"}), 500

@app.route("/chat", methods=["POST"])
def chat():
    data = request.json
    user_message = data.get("message", "")

    if not user_message:
        return jsonify({"response": "Please enter a message."}), 400

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": "You are a helpful AI marketing chatbot."},
                      {"role": "user", "content": user_message}]
        )
        ai_reply = response["choices"][0]["message"]["content"]
        return jsonify({"response": ai_reply})
    except Exception as e:
        return jsonify({"response": f"Error: {str(e)}"}), 500

if __name__ == "__main__":
    app.run(debug=True)
